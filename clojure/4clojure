(= ((fn [coll index] (nth coll index)) '([1 2] [3 4] [5 6]) 2) [5 6])



#(reduce + (map (fn [x] 1) %))

(defn fibcock [x]
  (take x
        ((defn fib [a b]
          (cons a
                (lazy-seq
                 (fib b
                      (+ a b)))))
        1 1)))

(fibcock 10)

(defn palinwhat [coll]
  (let
    [rc (reverse coll)
     n (count coll)]
    (every? identity
            (map
             #(=
               (nth coll %)
               (nth rc %))
             (range
              (/ (dec n) 2))))))

(true? (palinwhat '(1 1 3 3 1 1)))
(true? (palinwhat "rar"))